/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.28).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.accenture.api;

import com.accenture.model.BillingAccountCreate;
import com.accenture.model.BillingAccount;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import javax.validation.Valid;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2022-11-06T21:16:01.493Z")

@Validated
@Api(value = "billingAccount", description = "the billingAccount API")
@RequestMapping(value = "/accountManagement")
public interface BillingAccountApi {

    @RequestMapping(value = "/billingAccount",
            produces = { "application/json;charset=utf-8" },
            consumes = { "application/json;charset=utf-8" },
            method = RequestMethod.POST
    )
    @ApiOperation(value = "Creates a BillingAccount", nickname = "createBillingAccount", notes = "This operation creates a BillingAccount entity.", response = BillingAccount.class, tags={ "billingAccount", })
    @ApiResponses(value = {
        @ApiResponse(code = 201, message = "Created", response = BillingAccount.class),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) }
    )
    ResponseEntity<BillingAccount> createBillingAccount(
            @ApiParam(value = "The BillingAccount to be created" ,required=true )
            @Valid @RequestBody BillingAccountCreate billingAccount
    );

    @ApiOperation(value = "List or find BillingAccount objects", nickname = "listBillingAccount", notes = "This operation list or find BillingAccount entities", response = BillingAccount.class, responseContainer = "List", tags={ "billingAccount", })
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "Success", response = BillingAccount.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Bad Request", response = Error.class),
        @ApiResponse(code = 401, message = "Unauthorized", response = Error.class),
        @ApiResponse(code = 403, message = "Forbidden", response = Error.class),
        @ApiResponse(code = 404, message = "Not Found", response = Error.class),
        @ApiResponse(code = 405, message = "Method Not allowed", response = Error.class),
        @ApiResponse(code = 409, message = "Conflict", response = Error.class),
        @ApiResponse(code = 500, message = "Internal Server Error", response = Error.class) })
    @RequestMapping(value = "/billingAccount",
        produces = { "application/json;charset=utf-8" },
        consumes = { "application/json;charset=utf-8" },
        method = RequestMethod.GET)
    ResponseEntity<List<BillingAccount>> listBillingAccount(@ApiParam(value = "Comma-separated properties to be provided in response") @Valid @RequestParam(value = "fields", required = false) String fields,@ApiParam(value = "Requested index for start of resources to be provided in response") @Valid @RequestParam(value = "offset", required = false) Integer offset,@ApiParam(value = "Requested number of resources to be provided in response") @Valid @RequestParam(value = "limit", required = false) Integer limit);

}
